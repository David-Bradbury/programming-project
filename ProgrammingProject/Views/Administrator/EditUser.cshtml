@using X.PagedList
@using X.PagedList.Mvc.Core
@using X.PagedList.Web.Common
@using ProgrammingProject.Utilities;
@model UserAdminViewModel
@{
    ViewData["Title"] = "EditUser";
}

<div>
    <h1 class="display-4">List of Current Users</h1>

    <table class="table">
        <tr>
            <th>ID</th>
            <th>User Type</th>
            <th>@Html.DisplayNameFor(x => x.PagedList[0].Email)</th>
            <th>@Html.DisplayNameFor(x => x.PagedList[0].FirstName)</th>
            <th>@Html.DisplayNameFor(x => x.PagedList[0].LastName)</th>
            <th></th>
            <th></th>
        </tr>
        @{
            var userType = "";
        }
        @foreach (var user in Model.PagedList)
        {
            char[] unwantedChars = { 'P', 'r', 'o', 'x', 'y' };

            <tr>
                <td>@Html.DisplayFor( x=> user.UserId) </td>
                <td>@user.GetType().Name.Trim(unwantedChars)r</td>
                <td>@Html.DisplayFor(x => user.Email)</td>
                <td>@Html.DisplayFor(x => user.FirstName)</td>
                <td>@Html.DisplayFor(x => user.LastName)</td>
                <td>
                    <a class="btn btn-primary"
                   asp-action="DeleteUser" asp-route-id=@user.UserId>Delete</a>
                </td>
                <td>
                    <a class="btn btn-primary"
                   asp-action="UpdateUserProfile" asp-route-id=@user.UserId>Edit</a>
                </td>
            </tr>
        }
    </table>


    @Html.PagedListPager(Model.PagedList, page => Url.Action("EditUser", new { page }),
    new PagedListRenderOptions {
    LiElementClasses = new[] { "page-item"},
    PageClasses = new[] {"page-link"}
    })
    <div>
        <a asp-action="Index">Back to Dashboard</a>
    </div>
</div>