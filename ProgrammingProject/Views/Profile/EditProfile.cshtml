@model EditProfileViewModel
@{
    ViewData["Title"] = "EditProfile";
}

<h1 class="display-4">Edit Profile</h1>

<div class="row">
    <div class="col-md-4">
        <form asp-action="EditProfile">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input asp-for=Email type="hidden" />
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input asp-for=SelectedField type="hidden" />
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input asp-for=UserType type="hidden" />

            @if (Model.SelectedField.Equals(nameof(Model.FirstName)))
            {
                <div class="form-group">
                    <label asp-for="FirstName" class="control-label"></label>
                    <input asp-for="FirstName" class="form-control" />
                    <div class="form-group">
                        <span asp-validation-for="FirstName" class="text-danger"></span>
                    </div>
                </div>

            }
            @if (Model.SelectedField.Equals(nameof(Model.LastName)))
            {
                <div class="form-group">
                    <label asp-for="LastName" class="control-label"></label>
                    <input asp-for="LastName" class="form-control" />
                    <div class="form-group">
                        <span asp-validation-for="LastName" class="text-danger"></span>
                    </div>
                </div>

            }
            @if (Model.SelectedField.Equals(nameof(Model.StreetAddress)))
            {
                <div class="form-group">
                    <label asp-for="StreetAddress" class="control-label"></label>
                    <input asp-for="StreetAddress" class="form-control" />
                    <span asp-validation-for="StreetAddress" class="text-danger"></span>
                </div>

            }
            @if (Model.SelectedField.Equals(nameof(Model.State)))
            {
                <div class="form-group">
                    <label asp-for="State" class="control-label"></label>
                    <input asp-for="State" class="form-control" />
                    <span asp-validation-for="State" class="text-danger"></span>
                </div>

            }
            @if (Model.SelectedField.Equals(nameof(Model.PhNumber)))
            {
                <div class="form-group">
                    <label asp-for="PhNumber" class="control-label"></label>
                    <input asp-for="PhNumber" class="form-control" />
                    <span asp-validation-for="PhNumber" class="text-danger"></span>
                </div>

            }
            @if (Model.SelectedField.Equals(nameof(Model.IsInsured)))
            {
                <div class="form-group">
                    <label asp-for="IsInsured" class="control-label"></label>
                    <input asp-for="IsInsured" class="form-control" />
                    <span asp-validation-for="IsInsured" class="text-danger"></span>
                </div>

            }
            @if (Model.SelectedField.Equals(nameof(Model.ExperienceLevel)))
            {
                <div class="form-group">
                    <label asp-for="ExperienceLevel" class="control-label"></label>
                    <input asp-for="ExperienceLevel" class="form-control" />
                    <span asp-validation-for="ExperienceLevel" class="text-danger"></span>
                </div>

            }


            <div class="form-group" style="padding-top: 15px">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to Profile</a>
</div>
@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    }